const dsaSheet = [
  {
    _id: "1",
    name: "DSA Sheet",
    img: "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Python.svg/800px-Python.svg.png",
    link: "https://www.google.com",
    topics: [
      {
        _id: 1,
        topic: "Arrays",
        questions: [
          "Two Sum",
          "Best Time to Buy and Sell Stock",
          "Maximum Subarray",
          "Rotate Image",
          "Find Missing Number",
          "Product of Array Except Self",
          "Set Matrix Zeroes",
          "Spiral Matrix",
          "Find the Duplicate Number",
          "Move Zeroes",
        ],
        link: "www.google.com",
      },
      {
        _id: 2,
        topic: "Strings",
        questions: [
          "Longest Substring Without Repeating Characters",
          "Valid Palindrome",
          "Anagram",
          "String Compression",
          "Implement strStr()",
          "Palindrome Partitioning",
          "Longest Palindromic Substring",
          "Group Anagrams",
          "Rearrange Words in a Sentence",
          "Valid Anagram",
        ],
        link: "www.google.com",
      },
      {
        _id: 3,
        topic: "Linked Lists",
        questions: [
          "Reverse Linked List",
          "Detect Cycle in a Linked List",
          "Merge Two Sorted Lists",
          "Intersection of Two Linked Lists",
          "Flatten a Linked List",
          "Linked List Cycle Detection (Floyd's Tortoise and Hare)",
          "Remove N-th Node from End of List",
          "Reorder List",
          "Odd Even Linked List",
          "Palindrome Linked List",
        ],
        link: "www.google.com",
      },
      {
        _id: 4,
        topic: "Stacks and Queues",
        questions: [
          "Valid Parentheses",
          "Min Stack",
          "Implement Queue using Stacks",
          "Daily Temperature",
          "Next Greater Element",
          "Evaluate Reverse Polish Notation",
          "Largest Rectangle in Histogram",
          "Implement Stack using Queues",
          "Sort Stack",
          "Next Smaller Element",
        ],
        link: "www.google.com",
      },
      {
        _id: 5,
        topic: "Trees",
        questions: [
          "Binary Tree Inorder Traversal",
          "Symmetric Tree",
          "Lowest Common Ancestor of a Binary Tree",
          "Serialize and Deserialize Binary Tree",
          "Path Sum",
          "Binary Tree Level Order Traversal",
          "Construct Binary Tree from Preorder and Inorder Traversal",
          "Diameter of Binary Tree",
          "Flatten Binary Tree to Linked List",
          "Balanced Binary Tree",
        ],
        link: "www.google.com",
      },
      {
        _id: 6,
        topic: "Binary Search",
        questions: [
          "Binary Search",
          "Find Peak Element",
          "Search in Rotated Sorted Array",
          "Find First and Last Position of Element in Sorted Array",
          "Kth Smallest Element in a Sorted Matrix",
          "Find Minimum in Rotated Sorted Array",
          "Search Insert Position",
          "Square Root of a Number",
          "Pow(x, n)",
          "Perfect Squares",
        ],
        link: "www.google.com",
      },
      {
        _id: 7,
        topic: "Heaps",
        questions: [
          "Kth Largest Element in an Array",
          "Merge K Sorted Lists",
          "Top K Frequent Elements",
          "Find Median from Data Stream",
          "Implement Heap Sort",
          "Kth Smallest Element in a Sorted Matrix",
          "Last Stone Weight",
          "Connect Ropes",
          "Sort an Almost Sorted Array",
          "Sliding Window Maximum",
        ],
        link: "www.google.com",
      },
      {
        _id: 8,
        topic: "Hashing",
        questions: [
          "Two Sum",
          "Longest Substring Without Repeating Characters",
          "Group Anagrams",
          "Subarray Sum Equals K",
          "Contains Duplicate",
          "Intersection of Two Arrays",
          "First Unique Character in a String",
          "Valid Sudoku",
          "Find All Anagrams in a String",
          "Happy Number",
        ],
        link: "www.google.com",
      },
      {
        _id: 9,
        topic: "Dynamic Programming",
        questions: [
          "Fibonacci Number",
          "Climbing Stairs",
          "Longest Increasing Subsequence",
          "Coin Change",
          "Word Break",
          "Partition Equal Subset Sum",
          "Longest Palindromic Subsequence",
          "House Robber",
          "Unique Paths",
          "Edit Distance",
        ],
        link: "www.google.com",
      },
      {
        _id: 10,
        topic: "Graphs",
        questions: [
          "Number of Islands",
          "Clone Graph",
          "Course Schedule",
          "Minimum Spanning Tree (Kruskal's/Prim's Algorithm)",
          "Dijkstra's Shortest Path Algorithm",
          "Word Ladder",
          "Alien Dictionary",
          "Find the Town Judge",
          "Pacific Atlantic Water Flow",
          "Graph Valid Tree",
        ],
        link: "www.google.com",
      },
      {
        _id: 11,
        topic: "Recursion and Backtracking",
        questions: [
          "Permutations",
          "Subsets",
          "Combination Sum",
          "N-Queens",
          "Sudoku Solver",
          "Letter Combinations of a Phone Number",
          "Generate Parentheses",
          "Permutations II",
          "Word Search II",
          "Combinations",
        ],
        link: "www.google.com",
      },
      {
        _id: 12,
        topic: "Sorting and Searching",
        questions: [
          "Merge Sort",
          "Quick Sort",
          "Binary Search",
          "Kth Smallest Element in an Array",
          "Find the Peak Element",
          "Sort Colors",
          "Search a 2D Matrix",
          "Intersection of Two Arrays",
          "Count of Smaller Numbers After Self",
          "Merge Intervals",
        ],
        link: "www.google.com",
      },
      {
        _id: 13,
        topic: "Bit Manipulation",
        questions: [
          "Single Number",
          "Counting Bits",
          "Reverse Bits",
          "Power of Two",
          "Missing Number",
          "Number of 1 Bits",
          "Bitwise AND of Numbers Range",
          "Hamming Distance",
          "Two Sum II",
          "Subsets II",
        ],
        link: "www.google.com",
      },
      {
        _id: 14,
        topic: "Design Patterns",
        questions: [
          "Design a URL Shortener",
          "Design a Parking System",
          "Design a Tic-Tac-Toe Game",
          "Design a Cache System",
          "Design a File System",
          "Design a Social Media Platform",
          "Design a Recommendation System",
          "Design an Online Bookstore",
          "Design a Twitter-like System",
          "Design a Google Maps-like System",
        ],
        link: "www.google.com",
      },
    ],
  },
];

export default dsaSheet;

// const dsaSheet = [
//   {
//     _id: "1",
//     name: "DSA Sheet",
//     img: "https://upload.wikimedia.org/wikipedia/commons/thumb/0/0a/Python.svg/800px-Python.svg.png",
//     link: "https://www.google.com",
//     topics: [
//       "Arrays",
//       "Strings",
//       "Linked Lists",
//       "Stacks and Queues",
//       "Trees",
//       "Binary Search",
//       "Heaps",
//       "Hashing",
//       "Dynamic Programming",
//       "Graphs",
//       "Recursion and Backtracking",
//       "Sorting and Searching",
//       "Bit Manipulation",
//       "Design Patterns",
//     ],
//     questions: [
//       [
//         "Two Sum",
//         "Best Time to Buy and Sell Stock",
//         "Maximum Subarray",
//         "Rotate Image",
//         "Find Missing Number",
//         "Product of Array Except Self",
//         "Set Matrix Zeroes",
//         "Spiral Matrix",
//         "Find the Duplicate Number",
//         "Move Zeroes",
//       ],
//       [
//         "Longest Substring Without Repeating Characters",
//         "Valid Palindrome",
//         "Anagram",
//         "String Compression",
//         "Implement strStr()",
//         "Palindrome Partitioning",
//         "Longest Palindromic Substring",
//         "Group Anagrams",
//         "Rearrange Words in a Sentence",
//         "Valid Anagram",
//       ],
//       [
//         "Reverse Linked List",
//         "Detect Cycle in a Linked List",
//         "Merge Two Sorted Lists",
//         "Intersection of Two Linked Lists",
//         "Flatten a Linked List",
//         "Linked List Cycle Detection (Floyd's Tortoise and Hare)",
//         "Remove N-th Node from End of List",
//         "Reorder List",
//         "Odd Even Linked List",
//         "Palindrome Linked List",
//       ],
//       [
//         "Valid Parentheses",
//         "Min Stack",
//         "Implement Queue using Stacks",
//         "Daily Temperature",
//         "Next Greater Element",
//         "Evaluate Reverse Polish Notation",
//         "Largest Rectangle in Histogram",
//         "Implement Stack using Queues",
//         "Sort Stack",
//         "Next Smaller Element",
//       ],
//       [
//         "Binary Tree Inorder Traversal",
//         "Symmetric Tree",
//         "Lowest Common Ancestor of a Binary Tree",
//         "Serialize and Deserialize Binary Tree",
//         "Path Sum",
//         "Binary Tree Level Order Traversal",
//         "Construct Binary Tree from Preorder and Inorder Traversal",
//         "Diameter of Binary Tree",
//         "Flatten Binary Tree to Linked List",
//         "Balanced Binary Tree",
//       ],
//       [
//         "Binary Search",
//         "Find Peak Element",
//         "Search in Rotated Sorted Array",
//         "Find First and Last Position of Element in Sorted Array",
//         "Kth Smallest Element in a Sorted Matrix",
//         "Find Minimum in Rotated Sorted Array",
//         "Search Insert Position",
//         "Square Root of a Number",
//         "Pow(x, n)",
//         "Perfect Squares",
//       ],
//       [
//         "Kth Largest Element in an Array",
//         "Merge K Sorted Lists",
//         "Top K Frequent Elements",
//         "Find Median from Data Stream",
//         "Implement Heap Sort",
//         "Kth Smallest Element in a Sorted Matrix",
//         "Last Stone Weight",
//         "Connect Ropes",
//         "Sort an Almost Sorted Array",
//         "Sliding Window Maximum",
//       ],
//       [
//         "Two Sum",
//         "Longest Substring Without Repeating Characters",
//         "Group Anagrams",
//         "Subarray Sum Equals K",
//         "Contains Duplicate",
//         "Intersection of Two Arrays",
//         "First Unique Character in a String",
//         "Valid Sudoku",
//         "Find All Anagrams in a String",
//         "Happy Number",
//       ],
//       [
//         "Fibonacci Number",
//         "Climbing Stairs",
//         "Longest Increasing Subsequence",
//         "Coin Change",
//         "Word Break",
//         "Partition Equal Subset Sum",
//         "Longest Palindromic Subsequence",
//         "House Robber",
//         "Unique Paths",
//         "Edit Distance",
//       ],
//       [
//         "Number of Islands",
//         "Clone Graph",
//         "Course Schedule",
//         "Minimum Spanning Tree (Kruskal's/Prim's Algorithm)",
//         "Dijkstra's Shortest Path Algorithm",
//         "Word Ladder",
//         "Alien Dictionary",
//         "Find the Town Judge",
//         "Pacific Atlantic Water Flow",
//         "Graph Valid Tree",
//       ],
//       [
//         "Permutations",
//         "Subsets",
//         "Combination Sum",
//         "N-Queens",
//         "Sudoku Solver",
//         "Letter Combinations of a Phone Number",
//         "Generate Parentheses",
//         "Permutations II",
//         "Word Search II",
//         "Combinations",
//       ],
//       [
//         "Merge Sort",
//         "Quick Sort",
//         "Binary Search",
//         "Kth Smallest Element in an Array",
//         "Find the Peak Element",
//         "Sort Colors",
//         "Search a 2D Matrix",
//         "Intersection of Two Arrays",
//         "Count of Smaller Numbers After Self",
//         "Merge Intervals",
//       ],
//       [
//         "Single Number",
//         "Counting Bits",
//         "Reverse Bits",
//         "Power of Two",
//         "Missing Number",
//         "Number of 1 Bits",
//         "Bitwise AND of Numbers Range",
//         "Hamming Distance",
//         "Two Sum II",
//         "Subsets II",
//       ],
//       [
//         "Design a URL Shortener",
//         "Design a Parking System",
//         "Design a Tic-Tac-Toe Game",
//         "Design a Cache System",
//         "Design a File System",
//         "Design a Social Media Platform",
//         "Design a Recommendation System",
//         "Design an Online Bookstore",
//         "Design a Twitter-like System",
//         "Design a Google Maps-like System",
//       ],
//     ],
//   },
// ];

// export default dsaSheet;
